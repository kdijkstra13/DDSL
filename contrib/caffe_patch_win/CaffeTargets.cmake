# Patched version with the right static libraries. Somehow the original version contains the wrong libraries.
# gflags.lib, caffehdf5.lib, caffehdf5_hl.lib
# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget caffe proto)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target caffe
add_library(caffe STATIC IMPORTED)

set_target_properties(caffe PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "CMAKE_WINDOWS_BUILD;BOOST_ALL_NO_LIB"
)

# Create imported target proto
add_library(proto STATIC IMPORTED)

# Import target "caffe" for configuration "Debug"
set_property(TARGET caffe APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(caffe PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LINK_INTERFACE_LIBRARIES_DEBUG "proto;proto;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_system-vc140-mt-gd-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_thread-vc140-mt-gd-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_filesystem-vc140-mt-gd-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_chrono-vc140-mt-gd-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_date_time-vc140-mt-gd-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_atomic-vc140-mt-gd-1_61.lib;glog;gflags;C:/Projects/DSL/contrib/caffe/build/libraries/lib/libprotobufd.lib;caffehdf5;caffehdf5_hl;lmdb;leveldb;snappy_static;C:/Projects/DSL/contrib/caffe/build/libraries/lib/caffezlibd.lib;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;C:/Projects/DSL/contrib/caffe/build/libraries/lib/libopenblas.dll.a;C:/Users/klaas/Miniconda3/envs/py35/libs/python35.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_python-vc140-mt-gd-1_61.lib"
  IMPORTED_LOCATION_DEBUG "C:/Projects/DSL/contrib/caffe/build/lib/Debug/caffe-d.lib"
  )

# Import target "proto" for configuration "Debug"
set_property(TARGET proto APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(proto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "C:/Projects/DSL/contrib/caffe/build/lib/Debug/proto-d.lib"
  )

# Import target "caffe" for configuration "Release"
set_property(TARGET caffe APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(caffe PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE "proto;proto;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_system-vc140-mt-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_thread-vc140-mt-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_filesystem-vc140-mt-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_chrono-vc140-mt-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_date_time-vc140-mt-1_61.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_atomic-vc140-mt-1_61.lib;glog;gflags;C:/Projects/DSL/contrib/caffe/build/libraries/lib/libprotobuf.lib;caffehdf5;caffehdf5_hl;lmdb;leveldb;snappy_static;C:/Projects/DSL/contrib/caffe/build/libraries/lib/caffezlib.lib;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;C:/Projects/DSL/contrib/caffe/build/libraries/lib/libopenblas.dll.a;C:/Users/klaas/Miniconda3/envs/py35/libs/python35.lib;C:/Projects/DSL/contrib/caffe/build/libraries/lib/boost_python-vc140-mt-1_61.lib"
  IMPORTED_LOCATION_RELEASE "C:/Projects/DSL/contrib/caffe/build/lib/Release/caffe.lib"
  )

# Import target "proto" for configuration "Release"
set_property(TARGET proto APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(proto PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "C:/Projects/DSL/contrib/caffe/build/lib/Release/proto.lib"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
